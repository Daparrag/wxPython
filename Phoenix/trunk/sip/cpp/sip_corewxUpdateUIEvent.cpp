/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.12-snapshot-93040d2c716c
 *
 *     Copyright: (c) 2010 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

#line 1312 "sip/gen/event.sip"
    #include <wx/event.h>
#line 15 "sip_corewxUpdateUIEvent.cpp"

#line 40 "sip/gen/object.sip"
    #include <wx/object.h>
#line 19 "sip_corewxUpdateUIEvent.cpp"
#line 129 "sip/gen/event.sip"
    #include <wx/event.h>
#line 22 "sip_corewxUpdateUIEvent.cpp"
#line 17 "sip/gen/object.sip"
    #include <wx/object.h>
#line 25 "sip_corewxUpdateUIEvent.cpp"
#line 84 "sip/gen/object.sip"
    #include <wx/object.h>
#line 28 "sip_corewxUpdateUIEvent.cpp"


class sipwxUpdateUIEvent : public wxUpdateUIEvent
{
public:
    sipwxUpdateUIEvent(wxWindowID);
    sipwxUpdateUIEvent(const wxUpdateUIEvent&);
    virtual ~sipwxUpdateUIEvent();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    wxEvent * Clone();
    wxEventCategory GetEventCategory();
    wxClassInfo * GetClassInfo();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxUpdateUIEvent(const sipwxUpdateUIEvent &);
    sipwxUpdateUIEvent &operator = (const sipwxUpdateUIEvent &);

    char sipPyMethods[3];
};

sipwxUpdateUIEvent::sipwxUpdateUIEvent(wxWindowID commandId): wxUpdateUIEvent(commandId), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxUpdateUIEvent::sipwxUpdateUIEvent(const wxUpdateUIEvent& a0): wxUpdateUIEvent(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxUpdateUIEvent::~sipwxUpdateUIEvent()
{
    sipCommonDtor(sipPySelf);
}

wxEvent * sipwxUpdateUIEvent::Clone()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_Clone);

    if (!sipMeth)
        return wxEvent::Clone();

    extern wxEvent * sipVH__core_1(sip_gilstate_t,PyObject *);

    return sipVH__core_1(sipGILState,sipMeth);
}

wxEventCategory sipwxUpdateUIEvent::GetEventCategory()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_GetEventCategory);

    if (!sipMeth)
        return wxEvent::GetEventCategory();

    extern wxEventCategory sipVH__core_0(sip_gilstate_t,PyObject *);

    return sipVH__core_0(sipGILState,sipMeth);
}

wxClassInfo * sipwxUpdateUIEvent::GetClassInfo()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_GetClassInfo);

    if (!sipMeth)
        return wxObject::GetClassInfo();

    extern wxClassInfo * sipVH__core_6(sip_gilstate_t,PyObject *);

    return sipVH__core_6(sipGILState,sipMeth);
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_Check, "UpdateUIEvent.Check(bool)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_Check(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_Check(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool check;
        wxUpdateUIEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_check,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp, &check))
        {
            try
            {
            sipCpp->Check(check);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_Check, doc_wxUpdateUIEvent_Check);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_Enable, "UpdateUIEvent.Enable(bool)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_Enable(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_Enable(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool enable;
        wxUpdateUIEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_enable,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp, &enable))
        {
            try
            {
            sipCpp->Enable(enable);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_Enable, doc_wxUpdateUIEvent_Enable);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetChecked, "UpdateUIEvent.GetChecked() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetChecked(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetChecked(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetChecked();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetChecked, doc_wxUpdateUIEvent_GetChecked);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetEnabled, "UpdateUIEvent.GetEnabled() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetEnabled(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetEnabled();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetEnabled, doc_wxUpdateUIEvent_GetEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetSetChecked, "UpdateUIEvent.GetSetChecked() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetSetChecked(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetSetChecked(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetSetChecked();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetSetChecked, doc_wxUpdateUIEvent_GetSetChecked);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetSetEnabled, "UpdateUIEvent.GetSetEnabled() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetSetEnabled(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetSetEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetSetEnabled();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetSetEnabled, doc_wxUpdateUIEvent_GetSetEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetSetShown, "UpdateUIEvent.GetSetShown() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetSetShown(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetSetShown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetSetShown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetSetShown, doc_wxUpdateUIEvent_GetSetShown);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetSetText, "UpdateUIEvent.GetSetText() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetSetText(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetSetText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetSetText();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetSetText, doc_wxUpdateUIEvent_GetSetText);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetShown, "UpdateUIEvent.GetShown() -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetShown(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetShown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->GetShown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetShown, doc_wxUpdateUIEvent_GetShown);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetText, "UpdateUIEvent.GetText() -> String");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetText(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp))
        {
            wxString *sipRes;

            try
            {
            sipRes = new wxString(sipCpp->GetText());
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipConvertFromNewType(sipRes,sipType_wxString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetText, doc_wxUpdateUIEvent_GetText);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_SetText, "UpdateUIEvent.SetText(String)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_SetText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_SetText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const wxString * text;
        int textState = 0;
        wxUpdateUIEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_text,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp, sipType_wxString,&text, &textState))
        {
            try
            {
            sipCpp->SetText(*text);
            }
            catch (...)
            {
            sipReleaseType(const_cast<wxString *>(text),sipType_wxString,textState);
                sipRaiseUnknownException();
                return NULL;
            }
            sipReleaseType(const_cast<wxString *>(text),sipType_wxString,textState);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_SetText, doc_wxUpdateUIEvent_SetText);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_Show, "UpdateUIEvent.Show(bool)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_Show(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_Show(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool show;
        wxUpdateUIEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_show,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxUpdateUIEvent, &sipCpp, &show))
        {
            try
            {
            sipCpp->Show(show);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_Show, doc_wxUpdateUIEvent_Show);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_CanUpdate, "UpdateUIEvent.CanUpdate(Window) -> bool");

extern "C" {static PyObject *meth_wxUpdateUIEvent_CanUpdate(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_CanUpdate(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxWindow * window;

        static const char *sipKwdList[] = {
            sipName_window,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "J8", sipType_wxWindow, &window))
        {
            bool sipRes;

            try
            {
            sipRes = wxUpdateUIEvent::CanUpdate(window);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_CanUpdate, doc_wxUpdateUIEvent_CanUpdate);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetMode, "UpdateUIEvent.GetMode() -> UpdateUIMode");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetMode(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetMode(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            wxUpdateUIMode sipRes;

            try
            {
            sipRes = wxUpdateUIEvent::GetMode();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipConvertFromEnum(sipRes,sipType_wxUpdateUIMode);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetMode, doc_wxUpdateUIEvent_GetMode);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_GetUpdateInterval, "UpdateUIEvent.GetUpdateInterval() -> int");

extern "C" {static PyObject *meth_wxUpdateUIEvent_GetUpdateInterval(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_GetUpdateInterval(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            long sipRes;

            try
            {
            sipRes = wxUpdateUIEvent::GetUpdateInterval();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_GetUpdateInterval, doc_wxUpdateUIEvent_GetUpdateInterval);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_ResetUpdateTime, "UpdateUIEvent.ResetUpdateTime()");

extern "C" {static PyObject *meth_wxUpdateUIEvent_ResetUpdateTime(PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_ResetUpdateTime(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            try
            {
            wxUpdateUIEvent::ResetUpdateTime();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_ResetUpdateTime, doc_wxUpdateUIEvent_ResetUpdateTime);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_SetMode, "UpdateUIEvent.SetMode(UpdateUIMode)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_SetMode(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_SetMode(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxUpdateUIMode mode;

        static const char *sipKwdList[] = {
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "E", sipType_wxUpdateUIMode, &mode))
        {
            try
            {
            wxUpdateUIEvent::SetMode(mode);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_SetMode, doc_wxUpdateUIEvent_SetMode);

    return NULL;
}


PyDoc_STRVAR(doc_wxUpdateUIEvent_SetUpdateInterval, "UpdateUIEvent.SetUpdateInterval(int)");

extern "C" {static PyObject *meth_wxUpdateUIEvent_SetUpdateInterval(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxUpdateUIEvent_SetUpdateInterval(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        long updateInterval;

        static const char *sipKwdList[] = {
            sipName_updateInterval,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "l", &updateInterval))
        {
            try
            {
            wxUpdateUIEvent::SetUpdateInterval(updateInterval);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_UpdateUIEvent, sipName_SetUpdateInterval, doc_wxUpdateUIEvent_SetUpdateInterval);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_wxUpdateUIEvent(void *, const sipTypeDef *);}
static void *cast_wxUpdateUIEvent(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_wxUpdateUIEvent)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_wxCommandEvent)->ctd_cast((wxCommandEvent *)(wxUpdateUIEvent *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxUpdateUIEvent(void *, int);}
static void release_wxUpdateUIEvent(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxUpdateUIEvent *>(sipCppV);
    else
        delete reinterpret_cast<wxUpdateUIEvent *>(sipCppV);
}


extern "C" {static void dealloc_wxUpdateUIEvent(sipSimpleWrapper *);}
static void dealloc_wxUpdateUIEvent(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipwxUpdateUIEvent *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_wxUpdateUIEvent(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_wxUpdateUIEvent(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_wxUpdateUIEvent(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxUpdateUIEvent *sipCpp = 0;

    {
        wxWindowID commandId = 0;

        static const char *sipKwdList[] = {
            sipName_commandId,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|i", &commandId))
        {
            try
            {
            sipCpp = new sipwxUpdateUIEvent(commandId);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const wxUpdateUIEvent * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxUpdateUIEvent, &a0))
        {
            try
            {
            sipCpp = new sipwxUpdateUIEvent(*a0);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxUpdateUIEvent[] = {{9, 255, 1}};


static PyMethodDef methods_wxUpdateUIEvent[] = {
    {SIP_MLNAME_CAST(sipName_CanUpdate), (PyCFunction)meth_wxUpdateUIEvent_CanUpdate, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_CanUpdate)},
    {SIP_MLNAME_CAST(sipName_Check), (PyCFunction)meth_wxUpdateUIEvent_Check, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_Check)},
    {SIP_MLNAME_CAST(sipName_Enable), (PyCFunction)meth_wxUpdateUIEvent_Enable, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_Enable)},
    {SIP_MLNAME_CAST(sipName_GetChecked), meth_wxUpdateUIEvent_GetChecked, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetChecked)},
    {SIP_MLNAME_CAST(sipName_GetEnabled), meth_wxUpdateUIEvent_GetEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetEnabled)},
    {SIP_MLNAME_CAST(sipName_GetMode), meth_wxUpdateUIEvent_GetMode, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetMode)},
    {SIP_MLNAME_CAST(sipName_GetSetChecked), meth_wxUpdateUIEvent_GetSetChecked, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetSetChecked)},
    {SIP_MLNAME_CAST(sipName_GetSetEnabled), meth_wxUpdateUIEvent_GetSetEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetSetEnabled)},
    {SIP_MLNAME_CAST(sipName_GetSetShown), meth_wxUpdateUIEvent_GetSetShown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetSetShown)},
    {SIP_MLNAME_CAST(sipName_GetSetText), meth_wxUpdateUIEvent_GetSetText, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetSetText)},
    {SIP_MLNAME_CAST(sipName_GetShown), meth_wxUpdateUIEvent_GetShown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetShown)},
    {SIP_MLNAME_CAST(sipName_GetText), meth_wxUpdateUIEvent_GetText, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetText)},
    {SIP_MLNAME_CAST(sipName_GetUpdateInterval), meth_wxUpdateUIEvent_GetUpdateInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_GetUpdateInterval)},
    {SIP_MLNAME_CAST(sipName_ResetUpdateTime), meth_wxUpdateUIEvent_ResetUpdateTime, METH_VARARGS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_ResetUpdateTime)},
    {SIP_MLNAME_CAST(sipName_SetMode), (PyCFunction)meth_wxUpdateUIEvent_SetMode, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_SetMode)},
    {SIP_MLNAME_CAST(sipName_SetText), (PyCFunction)meth_wxUpdateUIEvent_SetText, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_SetText)},
    {SIP_MLNAME_CAST(sipName_SetUpdateInterval), (PyCFunction)meth_wxUpdateUIEvent_SetUpdateInterval, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_SetUpdateInterval)},
    {SIP_MLNAME_CAST(sipName_Show), (PyCFunction)meth_wxUpdateUIEvent_Show, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxUpdateUIEvent_Show)}
};

sipVariableDef variables_wxUpdateUIEvent[] = {
    {PropertyVariable, sipName_Text, &methods_wxUpdateUIEvent[11], &methods_wxUpdateUIEvent[15], NULL, NULL},
    {PropertyVariable, sipName_Shown, &methods_wxUpdateUIEvent[10], &methods_wxUpdateUIEvent[17], NULL, NULL},
    {PropertyVariable, sipName_Enabled, &methods_wxUpdateUIEvent[4], &methods_wxUpdateUIEvent[2], NULL, NULL},
    {PropertyVariable, sipName_Checked, &methods_wxUpdateUIEvent[3], &methods_wxUpdateUIEvent[1], NULL, NULL},
};

PyDoc_STRVAR(doc_wxUpdateUIEvent, "\1UpdateUIEvent(int commandId=0)\n"
    "UpdateUIEvent(UpdateUIEvent)");


sipClassTypeDef sipTypeDef__core_wxUpdateUIEvent = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxUpdateUIEvent,
        {0}
    },
    {
        sipNameNr_UpdateUIEvent,
        {0, 0, 1},
        18, methods_wxUpdateUIEvent,
        0, 0,
        4, variables_wxUpdateUIEvent,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxUpdateUIEvent,
    -1,
    -1,
    supers_wxUpdateUIEvent,
    0,
    init_wxUpdateUIEvent,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxUpdateUIEvent,
    0,
    0,
    0,
    release_wxUpdateUIEvent,
    cast_wxUpdateUIEvent,
    0,
    0,
    0
};
