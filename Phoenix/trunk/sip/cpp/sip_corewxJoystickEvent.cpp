/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.12-snapshot-93040d2c716c
 *
 *     Copyright: (c) 2010 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

#line 627 "sip/gen/event.sip"
    #include <wx/event.h>
#line 15 "sip_corewxJoystickEvent.cpp"

#line 23 "sip/gen/gdicmn.sip"
    #include <wx/gdicmn.h>
#line 19 "sip_corewxJoystickEvent.cpp"
#line 40 "sip/gen/object.sip"
    #include <wx/object.h>
#line 22 "sip_corewxJoystickEvent.cpp"
#line 129 "sip/gen/event.sip"
    #include <wx/event.h>
#line 25 "sip_corewxJoystickEvent.cpp"
#line 17 "sip/gen/object.sip"
    #include <wx/object.h>
#line 28 "sip_corewxJoystickEvent.cpp"
#line 84 "sip/gen/object.sip"
    #include <wx/object.h>
#line 31 "sip_corewxJoystickEvent.cpp"


class sipwxJoystickEvent : public wxJoystickEvent
{
public:
    sipwxJoystickEvent(wxEventType,int,int,int);
    sipwxJoystickEvent(const wxJoystickEvent&);
    virtual ~sipwxJoystickEvent();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    wxEvent * Clone();
    wxEventCategory GetEventCategory();
    wxClassInfo * GetClassInfo();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxJoystickEvent(const sipwxJoystickEvent &);
    sipwxJoystickEvent &operator = (const sipwxJoystickEvent &);

    char sipPyMethods[3];
};

sipwxJoystickEvent::sipwxJoystickEvent(wxEventType eventType,int state,int joystick,int change): wxJoystickEvent(eventType,state,joystick,change), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxJoystickEvent::sipwxJoystickEvent(const wxJoystickEvent& a0): wxJoystickEvent(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxJoystickEvent::~sipwxJoystickEvent()
{
    sipCommonDtor(sipPySelf);
}

wxEvent * sipwxJoystickEvent::Clone()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_Clone);

    if (!sipMeth)
        return wxEvent::Clone();

    extern wxEvent * sipVH__core_1(sip_gilstate_t,PyObject *);

    return sipVH__core_1(sipGILState,sipMeth);
}

wxEventCategory sipwxJoystickEvent::GetEventCategory()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_GetEventCategory);

    if (!sipMeth)
        return wxEvent::GetEventCategory();

    extern wxEventCategory sipVH__core_0(sip_gilstate_t,PyObject *);

    return sipVH__core_0(sipGILState,sipMeth);
}

wxClassInfo * sipwxJoystickEvent::GetClassInfo()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_GetClassInfo);

    if (!sipMeth)
        return wxObject::GetClassInfo();

    extern wxClassInfo * sipVH__core_6(sip_gilstate_t,PyObject *);

    return sipVH__core_6(sipGILState,sipMeth);
}


PyDoc_STRVAR(doc_wxJoystickEvent_ButtonDown, "JoystickEvent.ButtonDown(int button=wxJOY_BUTTON_ANY) -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_ButtonDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_ButtonDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int button = wxJOY_BUTTON_ANY;
        wxJoystickEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_button,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|i", &sipSelf, sipType_wxJoystickEvent, &sipCpp, &button))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonDown(button);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_ButtonDown, doc_wxJoystickEvent_ButtonDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_ButtonIsDown, "JoystickEvent.ButtonIsDown(int button=wxJOY_BUTTON_ANY) -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_ButtonIsDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_ButtonIsDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int button = wxJOY_BUTTON_ANY;
        wxJoystickEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_button,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|i", &sipSelf, sipType_wxJoystickEvent, &sipCpp, &button))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonIsDown(button);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_ButtonIsDown, doc_wxJoystickEvent_ButtonIsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_ButtonUp, "JoystickEvent.ButtonUp(int button=wxJOY_BUTTON_ANY) -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_ButtonUp(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_ButtonUp(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int button = wxJOY_BUTTON_ANY;
        wxJoystickEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_button,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|i", &sipSelf, sipType_wxJoystickEvent, &sipCpp, &button))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonUp(button);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_ButtonUp, doc_wxJoystickEvent_ButtonUp);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_GetButtonChange, "JoystickEvent.GetButtonChange() -> int");

extern "C" {static PyObject *meth_wxJoystickEvent_GetButtonChange(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_GetButtonChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetButtonChange();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_GetButtonChange, doc_wxJoystickEvent_GetButtonChange);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_GetButtonState, "JoystickEvent.GetButtonState() -> int");

extern "C" {static PyObject *meth_wxJoystickEvent_GetButtonState(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_GetButtonState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetButtonState();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_GetButtonState, doc_wxJoystickEvent_GetButtonState);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_GetJoystick, "JoystickEvent.GetJoystick() -> int");

extern "C" {static PyObject *meth_wxJoystickEvent_GetJoystick(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_GetJoystick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetJoystick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_GetJoystick, doc_wxJoystickEvent_GetJoystick);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_GetPosition, "JoystickEvent.GetPosition() -> Point");

extern "C" {static PyObject *meth_wxJoystickEvent_GetPosition(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_GetPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            wxPoint *sipRes;

            try
            {
            sipRes = new wxPoint(sipCpp->GetPosition());
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipConvertFromNewType(sipRes,sipType_wxPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_GetPosition, doc_wxJoystickEvent_GetPosition);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_GetZPosition, "JoystickEvent.GetZPosition() -> int");

extern "C" {static PyObject *meth_wxJoystickEvent_GetZPosition(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_GetZPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetZPosition();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_GetZPosition, doc_wxJoystickEvent_GetZPosition);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_IsButton, "JoystickEvent.IsButton() -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_IsButton(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_IsButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->IsButton();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_IsButton, doc_wxJoystickEvent_IsButton);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_IsMove, "JoystickEvent.IsMove() -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_IsMove(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_IsMove(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->IsMove();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_IsMove, doc_wxJoystickEvent_IsMove);

    return NULL;
}


PyDoc_STRVAR(doc_wxJoystickEvent_IsZMove, "JoystickEvent.IsZMove() -> bool");

extern "C" {static PyObject *meth_wxJoystickEvent_IsZMove(PyObject *, PyObject *);}
static PyObject *meth_wxJoystickEvent_IsZMove(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxJoystickEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxJoystickEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->IsZMove();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_JoystickEvent, sipName_IsZMove, doc_wxJoystickEvent_IsZMove);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_wxJoystickEvent(void *, const sipTypeDef *);}
static void *cast_wxJoystickEvent(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_wxJoystickEvent)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_wxEvent)->ctd_cast((wxEvent *)(wxJoystickEvent *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxJoystickEvent(void *, int);}
static void release_wxJoystickEvent(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxJoystickEvent *>(sipCppV);
    else
        delete reinterpret_cast<wxJoystickEvent *>(sipCppV);
}


extern "C" {static void dealloc_wxJoystickEvent(sipSimpleWrapper *);}
static void dealloc_wxJoystickEvent(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipwxJoystickEvent *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_wxJoystickEvent(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_wxJoystickEvent(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_wxJoystickEvent(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxJoystickEvent *sipCpp = 0;

    {
        wxEventType eventType = wxEVT_NULL;
        int state = 0;
        int joystick = wxJOYSTICK1;
        int change = 0;

        static const char *sipKwdList[] = {
            sipName_eventType,
            sipName_state,
            sipName_joystick,
            sipName_change,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|iiii", &eventType, &state, &joystick, &change))
        {
            try
            {
            sipCpp = new sipwxJoystickEvent(eventType,state,joystick,change);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const wxJoystickEvent * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxJoystickEvent, &a0))
        {
            try
            {
            sipCpp = new sipwxJoystickEvent(*a0);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxJoystickEvent[] = {{19, 255, 1}};


static PyMethodDef methods_wxJoystickEvent[] = {
    {SIP_MLNAME_CAST(sipName_ButtonDown), (PyCFunction)meth_wxJoystickEvent_ButtonDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxJoystickEvent_ButtonDown)},
    {SIP_MLNAME_CAST(sipName_ButtonIsDown), (PyCFunction)meth_wxJoystickEvent_ButtonIsDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxJoystickEvent_ButtonIsDown)},
    {SIP_MLNAME_CAST(sipName_ButtonUp), (PyCFunction)meth_wxJoystickEvent_ButtonUp, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxJoystickEvent_ButtonUp)},
    {SIP_MLNAME_CAST(sipName_GetButtonChange), meth_wxJoystickEvent_GetButtonChange, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_GetButtonChange)},
    {SIP_MLNAME_CAST(sipName_GetButtonState), meth_wxJoystickEvent_GetButtonState, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_GetButtonState)},
    {SIP_MLNAME_CAST(sipName_GetJoystick), meth_wxJoystickEvent_GetJoystick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_GetJoystick)},
    {SIP_MLNAME_CAST(sipName_GetPosition), meth_wxJoystickEvent_GetPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_GetPosition)},
    {SIP_MLNAME_CAST(sipName_GetZPosition), meth_wxJoystickEvent_GetZPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_GetZPosition)},
    {SIP_MLNAME_CAST(sipName_IsButton), meth_wxJoystickEvent_IsButton, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_IsButton)},
    {SIP_MLNAME_CAST(sipName_IsMove), meth_wxJoystickEvent_IsMove, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_IsMove)},
    {SIP_MLNAME_CAST(sipName_IsZMove), meth_wxJoystickEvent_IsZMove, METH_VARARGS, SIP_MLDOC_CAST(doc_wxJoystickEvent_IsZMove)}
};

PyDoc_STRVAR(doc_wxJoystickEvent, "\1JoystickEvent(int eventType=wxEVT_NULL, int state=0, int joystick=wxJOYSTICK1, int change=0)\n"
    "JoystickEvent(JoystickEvent)");


sipClassTypeDef sipTypeDef__core_wxJoystickEvent = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxJoystickEvent,
        {0}
    },
    {
        sipNameNr_JoystickEvent,
        {0, 0, 1},
        11, methods_wxJoystickEvent,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxJoystickEvent,
    -1,
    -1,
    supers_wxJoystickEvent,
    0,
    init_wxJoystickEvent,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxJoystickEvent,
    0,
    0,
    0,
    release_wxJoystickEvent,
    cast_wxJoystickEvent,
    0,
    0,
    0
};
