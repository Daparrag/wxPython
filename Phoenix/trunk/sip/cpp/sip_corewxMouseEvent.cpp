/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.12-snapshot-93040d2c716c
 *
 *     Copyright: (c) 2010 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

#line 821 "sip/gen/event.sip"
    #include <wx/event.h>
#line 15 "sip_corewxMouseEvent.cpp"

#line 23 "sip/gen/gdicmn.sip"
    #include <wx/gdicmn.h>
#line 19 "sip_corewxMouseEvent.cpp"
#line 40 "sip/gen/object.sip"
    #include <wx/object.h>
#line 22 "sip_corewxMouseEvent.cpp"
#line 129 "sip/gen/event.sip"
    #include <wx/event.h>
#line 25 "sip_corewxMouseEvent.cpp"
#line 17 "sip/gen/object.sip"
    #include <wx/object.h>
#line 28 "sip_corewxMouseEvent.cpp"
#line 84 "sip/gen/object.sip"
    #include <wx/object.h>
#line 31 "sip_corewxMouseEvent.cpp"
#line 17 "sip/gen/mousestate.sip"
    #include <wx/mousestate.h>
#line 34 "sip_corewxMouseEvent.cpp"


class sipwxMouseEvent : public wxMouseEvent
{
public:
    sipwxMouseEvent(wxEventType);
    sipwxMouseEvent(const wxMouseEvent&);
    virtual ~sipwxMouseEvent();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    wxEvent * Clone();
    wxEventCategory GetEventCategory();
    wxClassInfo * GetClassInfo();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxMouseEvent(const sipwxMouseEvent &);
    sipwxMouseEvent &operator = (const sipwxMouseEvent &);

    char sipPyMethods[3];
};

sipwxMouseEvent::sipwxMouseEvent(wxEventType mouseEventType): wxMouseEvent(mouseEventType), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxMouseEvent::sipwxMouseEvent(const wxMouseEvent& a0): wxMouseEvent(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxMouseEvent::~sipwxMouseEvent()
{
    sipCommonDtor(sipPySelf);
}

wxEvent * sipwxMouseEvent::Clone()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_Clone);

    if (!sipMeth)
        return wxEvent::Clone();

    extern wxEvent * sipVH__core_1(sip_gilstate_t,PyObject *);

    return sipVH__core_1(sipGILState,sipMeth);
}

wxEventCategory sipwxMouseEvent::GetEventCategory()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_GetEventCategory);

    if (!sipMeth)
        return wxEvent::GetEventCategory();

    extern wxEventCategory sipVH__core_0(sip_gilstate_t,PyObject *);

    return sipVH__core_0(sipGILState,sipMeth);
}

wxClassInfo * sipwxMouseEvent::GetClassInfo()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_GetClassInfo);

    if (!sipMeth)
        return wxObject::GetClassInfo();

    extern wxClassInfo * sipVH__core_6(sip_gilstate_t,PyObject *);

    return sipVH__core_6(sipGILState,sipMeth);
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux1DClick, "MouseEvent.Aux1DClick() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux1DClick(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux1DClick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux1DClick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux1DClick, doc_wxMouseEvent_Aux1DClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux1Down, "MouseEvent.Aux1Down() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux1Down(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux1Down(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux1Down();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux1Down, doc_wxMouseEvent_Aux1Down);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux1Up, "MouseEvent.Aux1Up() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux1Up(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux1Up(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux1Up();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux1Up, doc_wxMouseEvent_Aux1Up);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux2DClick, "MouseEvent.Aux2DClick() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux2DClick(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux2DClick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux2DClick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux2DClick, doc_wxMouseEvent_Aux2DClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux2Down, "MouseEvent.Aux2Down() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux2Down(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux2Down(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux2Down();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux2Down, doc_wxMouseEvent_Aux2Down);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Aux2Up, "MouseEvent.Aux2Up() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Aux2Up(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Aux2Up(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux2Up();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Aux2Up, doc_wxMouseEvent_Aux2Up);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Button, "MouseEvent.Button(MouseButton) -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Button(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Button(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseButton but;
        wxMouseEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_but,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE", &sipSelf, sipType_wxMouseEvent, &sipCpp, sipType_wxMouseButton, &but))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Button(but);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Button, doc_wxMouseEvent_Button);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_ButtonDClick, "MouseEvent.ButtonDClick(MouseButton but=wxMOUSE_BTN_ANY) -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_ButtonDClick(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_ButtonDClick(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseButton but = wxMOUSE_BTN_ANY;
        wxMouseEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_but,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_wxMouseEvent, &sipCpp, sipType_wxMouseButton, &but))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonDClick(but);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_ButtonDClick, doc_wxMouseEvent_ButtonDClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_ButtonDown, "MouseEvent.ButtonDown(MouseButton but=wxMOUSE_BTN_ANY) -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_ButtonDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_ButtonDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseButton but = wxMOUSE_BTN_ANY;
        wxMouseEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_but,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_wxMouseEvent, &sipCpp, sipType_wxMouseButton, &but))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonDown(but);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_ButtonDown, doc_wxMouseEvent_ButtonDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_ButtonUp, "MouseEvent.ButtonUp(MouseButton but=wxMOUSE_BTN_ANY) -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_ButtonUp(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_ButtonUp(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseButton but = wxMOUSE_BTN_ANY;
        wxMouseEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_but,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_wxMouseEvent, &sipCpp, sipType_wxMouseButton, &but))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->ButtonUp(but);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_ButtonUp, doc_wxMouseEvent_ButtonUp);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Dragging, "MouseEvent.Dragging() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Dragging(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Dragging(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Dragging();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Dragging, doc_wxMouseEvent_Dragging);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Entering, "MouseEvent.Entering() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Entering(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Entering(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Entering();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Entering, doc_wxMouseEvent_Entering);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetButton, "MouseEvent.GetButton() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetButton(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetButton();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetButton, doc_wxMouseEvent_GetButton);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetClickCount, "MouseEvent.GetClickCount() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetClickCount(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetClickCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetClickCount();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetClickCount, doc_wxMouseEvent_GetClickCount);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetLinesPerAction, "MouseEvent.GetLinesPerAction() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetLinesPerAction(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetLinesPerAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetLinesPerAction();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetLinesPerAction, doc_wxMouseEvent_GetLinesPerAction);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetLogicalPosition, "MouseEvent.GetLogicalPosition(DC) -> Point");

extern "C" {static PyObject *meth_wxMouseEvent_GetLogicalPosition(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetLogicalPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const wxDC * dc;
        wxMouseEvent *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9", &sipSelf, sipType_wxMouseEvent, &sipCpp, sipType_wxDC, &dc))
        {
            wxPoint *sipRes;

            try
            {
            sipRes = new wxPoint(sipCpp->GetLogicalPosition(*dc));
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipConvertFromNewType(sipRes,sipType_wxPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetLogicalPosition, doc_wxMouseEvent_GetLogicalPosition);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetWheelDelta, "MouseEvent.GetWheelDelta() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetWheelDelta(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetWheelDelta(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetWheelDelta();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetWheelDelta, doc_wxMouseEvent_GetWheelDelta);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetWheelRotation, "MouseEvent.GetWheelRotation() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetWheelRotation(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetWheelRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetWheelRotation();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetWheelRotation, doc_wxMouseEvent_GetWheelRotation);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_GetWheelAxis, "MouseEvent.GetWheelAxis() -> int");

extern "C" {static PyObject *meth_wxMouseEvent_GetWheelAxis(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_GetWheelAxis(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            int sipRes;

            try
            {
            sipRes = sipCpp->GetWheelAxis();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_GetWheelAxis, doc_wxMouseEvent_GetWheelAxis);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_IsButton, "MouseEvent.IsButton() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_IsButton(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_IsButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->IsButton();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_IsButton, doc_wxMouseEvent_IsButton);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_IsPageScroll, "MouseEvent.IsPageScroll() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_IsPageScroll(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_IsPageScroll(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->IsPageScroll();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_IsPageScroll, doc_wxMouseEvent_IsPageScroll);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Leaving, "MouseEvent.Leaving() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Leaving(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Leaving(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Leaving();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Leaving, doc_wxMouseEvent_Leaving);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_LeftDClick, "MouseEvent.LeftDClick() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_LeftDClick(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_LeftDClick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->LeftDClick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_LeftDClick, doc_wxMouseEvent_LeftDClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_LeftDown, "MouseEvent.LeftDown() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_LeftDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_LeftDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->LeftDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_LeftDown, doc_wxMouseEvent_LeftDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_LeftUp, "MouseEvent.LeftUp() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_LeftUp(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_LeftUp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->LeftUp();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_LeftUp, doc_wxMouseEvent_LeftUp);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_MetaDown, "MouseEvent.MetaDown() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_MetaDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_MetaDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->MetaDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_MetaDown, doc_wxMouseEvent_MetaDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_MiddleDClick, "MouseEvent.MiddleDClick() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_MiddleDClick(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_MiddleDClick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->MiddleDClick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_MiddleDClick, doc_wxMouseEvent_MiddleDClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_MiddleDown, "MouseEvent.MiddleDown() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_MiddleDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_MiddleDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->MiddleDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_MiddleDown, doc_wxMouseEvent_MiddleDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_MiddleUp, "MouseEvent.MiddleUp() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_MiddleUp(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_MiddleUp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->MiddleUp();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_MiddleUp, doc_wxMouseEvent_MiddleUp);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_Moving, "MouseEvent.Moving() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_Moving(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_Moving(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Moving();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_Moving, doc_wxMouseEvent_Moving);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_RightDClick, "MouseEvent.RightDClick() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_RightDClick(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_RightDClick(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->RightDClick();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_RightDClick, doc_wxMouseEvent_RightDClick);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_RightDown, "MouseEvent.RightDown() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_RightDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_RightDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->RightDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_RightDown, doc_wxMouseEvent_RightDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseEvent_RightUp, "MouseEvent.RightUp() -> bool");

extern "C" {static PyObject *meth_wxMouseEvent_RightUp(PyObject *, PyObject *);}
static PyObject *meth_wxMouseEvent_RightUp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseEvent, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->RightUp();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseEvent, sipName_RightUp, doc_wxMouseEvent_RightUp);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_wxMouseEvent(void *, const sipTypeDef *);}
static void *cast_wxMouseEvent(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_wxMouseEvent)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_wxEvent)->ctd_cast((wxEvent *)(wxMouseEvent *)ptr,targetType)) != NULL)
        return res;

    if ((res = ((const sipClassTypeDef *)sipType_wxMouseState)->ctd_cast((wxMouseState *)(wxMouseEvent *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxMouseEvent(void *, int);}
static void release_wxMouseEvent(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxMouseEvent *>(sipCppV);
    else
        delete reinterpret_cast<wxMouseEvent *>(sipCppV);
}


extern "C" {static void dealloc_wxMouseEvent(sipSimpleWrapper *);}
static void dealloc_wxMouseEvent(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipwxMouseEvent *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_wxMouseEvent(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_wxMouseEvent(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_wxMouseEvent(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxMouseEvent *sipCpp = 0;

    {
        wxEventType mouseEventType = wxEVT_NULL;

        static const char *sipKwdList[] = {
            sipName_mouseEventType,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|i", &mouseEventType))
        {
            try
            {
            sipCpp = new sipwxMouseEvent(mouseEventType);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const wxMouseEvent * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxMouseEvent, &a0))
        {
            try
            {
            sipCpp = new sipwxMouseEvent(*a0);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxMouseEvent[] = {{19, 255, 0}, {48, 255, 1}};


static PyMethodDef methods_wxMouseEvent[] = {
    {SIP_MLNAME_CAST(sipName_Aux1DClick), meth_wxMouseEvent_Aux1DClick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux1DClick)},
    {SIP_MLNAME_CAST(sipName_Aux1Down), meth_wxMouseEvent_Aux1Down, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux1Down)},
    {SIP_MLNAME_CAST(sipName_Aux1Up), meth_wxMouseEvent_Aux1Up, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux1Up)},
    {SIP_MLNAME_CAST(sipName_Aux2DClick), meth_wxMouseEvent_Aux2DClick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux2DClick)},
    {SIP_MLNAME_CAST(sipName_Aux2Down), meth_wxMouseEvent_Aux2Down, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux2Down)},
    {SIP_MLNAME_CAST(sipName_Aux2Up), meth_wxMouseEvent_Aux2Up, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Aux2Up)},
    {SIP_MLNAME_CAST(sipName_Button), (PyCFunction)meth_wxMouseEvent_Button, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseEvent_Button)},
    {SIP_MLNAME_CAST(sipName_ButtonDClick), (PyCFunction)meth_wxMouseEvent_ButtonDClick, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseEvent_ButtonDClick)},
    {SIP_MLNAME_CAST(sipName_ButtonDown), (PyCFunction)meth_wxMouseEvent_ButtonDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseEvent_ButtonDown)},
    {SIP_MLNAME_CAST(sipName_ButtonUp), (PyCFunction)meth_wxMouseEvent_ButtonUp, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseEvent_ButtonUp)},
    {SIP_MLNAME_CAST(sipName_Dragging), meth_wxMouseEvent_Dragging, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Dragging)},
    {SIP_MLNAME_CAST(sipName_Entering), meth_wxMouseEvent_Entering, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Entering)},
    {SIP_MLNAME_CAST(sipName_GetButton), meth_wxMouseEvent_GetButton, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetButton)},
    {SIP_MLNAME_CAST(sipName_GetClickCount), meth_wxMouseEvent_GetClickCount, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetClickCount)},
    {SIP_MLNAME_CAST(sipName_GetLinesPerAction), meth_wxMouseEvent_GetLinesPerAction, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetLinesPerAction)},
    {SIP_MLNAME_CAST(sipName_GetLogicalPosition), (PyCFunction)meth_wxMouseEvent_GetLogicalPosition, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetLogicalPosition)},
    {SIP_MLNAME_CAST(sipName_GetWheelAxis), meth_wxMouseEvent_GetWheelAxis, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetWheelAxis)},
    {SIP_MLNAME_CAST(sipName_GetWheelDelta), meth_wxMouseEvent_GetWheelDelta, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetWheelDelta)},
    {SIP_MLNAME_CAST(sipName_GetWheelRotation), meth_wxMouseEvent_GetWheelRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_GetWheelRotation)},
    {SIP_MLNAME_CAST(sipName_IsButton), meth_wxMouseEvent_IsButton, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_IsButton)},
    {SIP_MLNAME_CAST(sipName_IsPageScroll), meth_wxMouseEvent_IsPageScroll, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_IsPageScroll)},
    {SIP_MLNAME_CAST(sipName_Leaving), meth_wxMouseEvent_Leaving, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Leaving)},
    {SIP_MLNAME_CAST(sipName_LeftDClick), meth_wxMouseEvent_LeftDClick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_LeftDClick)},
    {SIP_MLNAME_CAST(sipName_LeftDown), meth_wxMouseEvent_LeftDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_LeftDown)},
    {SIP_MLNAME_CAST(sipName_LeftUp), meth_wxMouseEvent_LeftUp, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_LeftUp)},
    {SIP_MLNAME_CAST(sipName_MetaDown), meth_wxMouseEvent_MetaDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_MetaDown)},
    {SIP_MLNAME_CAST(sipName_MiddleDClick), meth_wxMouseEvent_MiddleDClick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_MiddleDClick)},
    {SIP_MLNAME_CAST(sipName_MiddleDown), meth_wxMouseEvent_MiddleDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_MiddleDown)},
    {SIP_MLNAME_CAST(sipName_MiddleUp), meth_wxMouseEvent_MiddleUp, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_MiddleUp)},
    {SIP_MLNAME_CAST(sipName_Moving), meth_wxMouseEvent_Moving, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_Moving)},
    {SIP_MLNAME_CAST(sipName_RightDClick), meth_wxMouseEvent_RightDClick, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_RightDClick)},
    {SIP_MLNAME_CAST(sipName_RightDown), meth_wxMouseEvent_RightDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_RightDown)},
    {SIP_MLNAME_CAST(sipName_RightUp), meth_wxMouseEvent_RightUp, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseEvent_RightUp)}
};

sipVariableDef variables_wxMouseEvent[] = {
    {PropertyVariable, sipName_WheelRotation, &methods_wxMouseEvent[18], NULL, NULL, NULL},
    {PropertyVariable, sipName_WheelDelta, &methods_wxMouseEvent[17], NULL, NULL, NULL},
    {PropertyVariable, sipName_LogicalPosition, &methods_wxMouseEvent[15], NULL, NULL, NULL},
    {PropertyVariable, sipName_LinesPerAction, &methods_wxMouseEvent[14], NULL, NULL, NULL},
};

PyDoc_STRVAR(doc_wxMouseEvent, "\1MouseEvent(int mouseEventType=wxEVT_NULL)\n"
    "MouseEvent(MouseEvent)");


sipClassTypeDef sipTypeDef__core_wxMouseEvent = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxMouseEvent,
        {0}
    },
    {
        sipNameNr_MouseEvent,
        {0, 0, 1},
        33, methods_wxMouseEvent,
        0, 0,
        4, variables_wxMouseEvent,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxMouseEvent,
    -1,
    -1,
    supers_wxMouseEvent,
    0,
    init_wxMouseEvent,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxMouseEvent,
    0,
    0,
    0,
    release_wxMouseEvent,
    cast_wxMouseEvent,
    0,
    0,
    0
};
