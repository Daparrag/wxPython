/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.12-snapshot-93040d2c716c
 *
 *     Copyright: (c) 2010 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

#line 17 "sip/gen/mousestate.sip"
    #include <wx/mousestate.h>
#line 15 "sip_corewxMouseState.cpp"

#line 23 "sip/gen/gdicmn.sip"
    #include <wx/gdicmn.h>
#line 19 "sip_corewxMouseState.cpp"


PyDoc_STRVAR(doc_wxMouseState_GetPosition, "MouseState.GetPosition() -> Point");

extern "C" {static PyObject *meth_wxMouseState_GetPosition(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_GetPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            wxPoint *sipRes;

            try
            {
            sipRes = new wxPoint(sipCpp->GetPosition());
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipConvertFromNewType(sipRes,sipType_wxPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_GetPosition, doc_wxMouseState_GetPosition);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_GetX, "MouseState.GetX() -> int");

extern "C" {static PyObject *meth_wxMouseState_GetX(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_GetX(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            wxCoord sipRes;

            try
            {
            sipRes = sipCpp->GetX();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_GetX, doc_wxMouseState_GetX);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_GetY, "MouseState.GetY() -> int");

extern "C" {static PyObject *meth_wxMouseState_GetY(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_GetY(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            wxCoord sipRes;

            try
            {
            sipRes = sipCpp->GetY();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_GetY, doc_wxMouseState_GetY);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_LeftIsDown, "MouseState.LeftIsDown() -> bool");

extern "C" {static PyObject *meth_wxMouseState_LeftIsDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_LeftIsDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->LeftIsDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_LeftIsDown, doc_wxMouseState_LeftIsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_MiddleIsDown, "MouseState.MiddleIsDown() -> bool");

extern "C" {static PyObject *meth_wxMouseState_MiddleIsDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_MiddleIsDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->MiddleIsDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_MiddleIsDown, doc_wxMouseState_MiddleIsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_RightIsDown, "MouseState.RightIsDown() -> bool");

extern "C" {static PyObject *meth_wxMouseState_RightIsDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_RightIsDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->RightIsDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_RightIsDown, doc_wxMouseState_RightIsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_Aux1IsDown, "MouseState.Aux1IsDown() -> bool");

extern "C" {static PyObject *meth_wxMouseState_Aux1IsDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_Aux1IsDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux1IsDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_Aux1IsDown, doc_wxMouseState_Aux1IsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_Aux2IsDown, "MouseState.Aux2IsDown() -> bool");

extern "C" {static PyObject *meth_wxMouseState_Aux2IsDown(PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_Aux2IsDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        wxMouseState *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxMouseState, &sipCpp))
        {
            bool sipRes;

            try
            {
            sipRes = sipCpp->Aux2IsDown();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_Aux2IsDown, doc_wxMouseState_Aux2IsDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetX, "MouseState.SetX(int)");

extern "C" {static PyObject *meth_wxMouseState_SetX(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetX(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxCoord x;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_x,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi", &sipSelf, sipType_wxMouseState, &sipCpp, &x))
        {
            try
            {
            sipCpp->SetX(x);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetX, doc_wxMouseState_SetX);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetY, "MouseState.SetY(int)");

extern "C" {static PyObject *meth_wxMouseState_SetY(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetY(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxCoord y;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_y,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi", &sipSelf, sipType_wxMouseState, &sipCpp, &y))
        {
            try
            {
            sipCpp->SetY(y);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetY, doc_wxMouseState_SetY);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetPosition, "MouseState.SetPosition(Point)");

extern "C" {static PyObject *meth_wxMouseState_SetPosition(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        wxPoint * pos;
        int posState = 0;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_pos,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1", &sipSelf, sipType_wxMouseState, &sipCpp, sipType_wxPoint, &pos, &posState))
        {
            try
            {
            sipCpp->SetPosition(*pos);
            }
            catch (...)
            {
            sipReleaseType(pos,sipType_wxPoint,posState);
                sipRaiseUnknownException();
                return NULL;
            }
            sipReleaseType(pos,sipType_wxPoint,posState);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetPosition, doc_wxMouseState_SetPosition);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetLeftDown, "MouseState.SetLeftDown(bool)");

extern "C" {static PyObject *meth_wxMouseState_SetLeftDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetLeftDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool down;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_down,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxMouseState, &sipCpp, &down))
        {
            try
            {
            sipCpp->SetLeftDown(down);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetLeftDown, doc_wxMouseState_SetLeftDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetMiddleDown, "MouseState.SetMiddleDown(bool)");

extern "C" {static PyObject *meth_wxMouseState_SetMiddleDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetMiddleDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool down;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_down,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxMouseState, &sipCpp, &down))
        {
            try
            {
            sipCpp->SetMiddleDown(down);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetMiddleDown, doc_wxMouseState_SetMiddleDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetRightDown, "MouseState.SetRightDown(bool)");

extern "C" {static PyObject *meth_wxMouseState_SetRightDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetRightDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool down;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_down,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxMouseState, &sipCpp, &down))
        {
            try
            {
            sipCpp->SetRightDown(down);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetRightDown, doc_wxMouseState_SetRightDown);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetAux1Down, "MouseState.SetAux1Down(bool)");

extern "C" {static PyObject *meth_wxMouseState_SetAux1Down(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetAux1Down(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool down;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_down,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxMouseState, &sipCpp, &down))
        {
            try
            {
            sipCpp->SetAux1Down(down);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetAux1Down, doc_wxMouseState_SetAux1Down);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetAux2Down, "MouseState.SetAux2Down(bool)");

extern "C" {static PyObject *meth_wxMouseState_SetAux2Down(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetAux2Down(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool down;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_down,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bb", &sipSelf, sipType_wxMouseState, &sipCpp, &down))
        {
            try
            {
            sipCpp->SetAux2Down(down);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetAux2Down, doc_wxMouseState_SetAux2Down);

    return NULL;
}


PyDoc_STRVAR(doc_wxMouseState_SetState, "MouseState.SetState(MouseState)");

extern "C" {static PyObject *meth_wxMouseState_SetState(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxMouseState_SetState(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const wxMouseState * state;
        wxMouseState *sipCpp;

        static const char *sipKwdList[] = {
            sipName_state,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9", &sipSelf, sipType_wxMouseState, &sipCpp, sipType_wxMouseState, &state))
        {
            try
            {
            sipCpp->SetState(*state);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MouseState, sipName_SetState, doc_wxMouseState_SetState);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_wxMouseState(void *, const sipTypeDef *);}
static void *cast_wxMouseState(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_wxMouseState)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_wxKeyboardState)->ctd_cast((wxKeyboardState *)(wxMouseState *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxMouseState(void *, int);}
static void release_wxMouseState(void *sipCppV,int)
{
    delete reinterpret_cast<wxMouseState *>(sipCppV);
}


extern "C" {static void assign_wxMouseState(void *, SIP_SSIZE_T, const void *);}
static void assign_wxMouseState(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<wxMouseState *>(sipDst)[sipDstIdx] = *reinterpret_cast<const wxMouseState *>(sipSrc);
}


extern "C" {static void *array_wxMouseState(SIP_SSIZE_T);}
static void *array_wxMouseState(SIP_SSIZE_T sipNrElem)
{
    return new wxMouseState[sipNrElem];
}


extern "C" {static void *copy_wxMouseState(const void *, SIP_SSIZE_T);}
static void *copy_wxMouseState(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new wxMouseState(reinterpret_cast<const wxMouseState *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxMouseState(sipSimpleWrapper *);}
static void dealloc_wxMouseState(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_wxMouseState(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_wxMouseState(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_wxMouseState(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    wxMouseState *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            try
            {
            sipCpp = new wxMouseState();
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipCpp;
        }
    }

    {
        const wxMouseState * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxMouseState, &a0))
        {
            try
            {
            sipCpp = new wxMouseState(*a0);
            }
            catch (...)
            {
                sipRaiseUnknownException();
                return NULL;
            }

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxMouseState[] = {{40, 255, 1}};


static PyMethodDef methods_wxMouseState[] = {
    {SIP_MLNAME_CAST(sipName_Aux1IsDown), meth_wxMouseState_Aux1IsDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_Aux1IsDown)},
    {SIP_MLNAME_CAST(sipName_Aux2IsDown), meth_wxMouseState_Aux2IsDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_Aux2IsDown)},
    {SIP_MLNAME_CAST(sipName_GetPosition), meth_wxMouseState_GetPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_GetPosition)},
    {SIP_MLNAME_CAST(sipName_GetX), meth_wxMouseState_GetX, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_GetX)},
    {SIP_MLNAME_CAST(sipName_GetY), meth_wxMouseState_GetY, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_GetY)},
    {SIP_MLNAME_CAST(sipName_LeftIsDown), meth_wxMouseState_LeftIsDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_LeftIsDown)},
    {SIP_MLNAME_CAST(sipName_MiddleIsDown), meth_wxMouseState_MiddleIsDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_MiddleIsDown)},
    {SIP_MLNAME_CAST(sipName_RightIsDown), meth_wxMouseState_RightIsDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxMouseState_RightIsDown)},
    {SIP_MLNAME_CAST(sipName_SetAux1Down), (PyCFunction)meth_wxMouseState_SetAux1Down, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetAux1Down)},
    {SIP_MLNAME_CAST(sipName_SetAux2Down), (PyCFunction)meth_wxMouseState_SetAux2Down, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetAux2Down)},
    {SIP_MLNAME_CAST(sipName_SetLeftDown), (PyCFunction)meth_wxMouseState_SetLeftDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetLeftDown)},
    {SIP_MLNAME_CAST(sipName_SetMiddleDown), (PyCFunction)meth_wxMouseState_SetMiddleDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetMiddleDown)},
    {SIP_MLNAME_CAST(sipName_SetPosition), (PyCFunction)meth_wxMouseState_SetPosition, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetPosition)},
    {SIP_MLNAME_CAST(sipName_SetRightDown), (PyCFunction)meth_wxMouseState_SetRightDown, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetRightDown)},
    {SIP_MLNAME_CAST(sipName_SetState), (PyCFunction)meth_wxMouseState_SetState, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetState)},
    {SIP_MLNAME_CAST(sipName_SetX), (PyCFunction)meth_wxMouseState_SetX, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetX)},
    {SIP_MLNAME_CAST(sipName_SetY), (PyCFunction)meth_wxMouseState_SetY, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxMouseState_SetY)}
};

sipVariableDef variables_wxMouseState[] = {
    {PropertyVariable, sipName_Position, &methods_wxMouseState[2], &methods_wxMouseState[12], NULL, NULL},
    {PropertyVariable, sipName_aux2IsDown, &methods_wxMouseState[1], &methods_wxMouseState[9], NULL, NULL},
    {PropertyVariable, sipName_aux1IsDown, &methods_wxMouseState[0], &methods_wxMouseState[8], NULL, NULL},
    {PropertyVariable, sipName_rightIsDown, &methods_wxMouseState[7], &methods_wxMouseState[13], NULL, NULL},
    {PropertyVariable, sipName_middleIsDown, &methods_wxMouseState[6], &methods_wxMouseState[11], NULL, NULL},
    {PropertyVariable, sipName_leftIsDown, &methods_wxMouseState[5], &methods_wxMouseState[10], NULL, NULL},
    {PropertyVariable, sipName_y, &methods_wxMouseState[4], &methods_wxMouseState[16], NULL, NULL},
    {PropertyVariable, sipName_x, &methods_wxMouseState[3], &methods_wxMouseState[15], NULL, NULL},
};

PyDoc_STRVAR(doc_wxMouseState, "\1MouseState()\n"
    "MouseState(MouseState)");


sipClassTypeDef sipTypeDef__core_wxMouseState = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxMouseState,
        {0}
    },
    {
        sipNameNr_MouseState,
        {0, 0, 1},
        17, methods_wxMouseState,
        0, 0,
        8, variables_wxMouseState,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxMouseState,
    -1,
    -1,
    supers_wxMouseState,
    0,
    init_wxMouseState,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxMouseState,
    assign_wxMouseState,
    array_wxMouseState,
    copy_wxMouseState,
    release_wxMouseState,
    cast_wxMouseState,
    0,
    0,
    0
};
