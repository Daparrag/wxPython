//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
// 
// Copyright: (c) 2010 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxPlatformInfo
{
    %TypeHeaderCode
        #include <wx/platinfo.h>
    %End


public:
    wxPlatformInfo(
        wxPortId pid = wxPORT_UNKNOWN,
        int tkMajor = -1,
        int tkMinor = -1,
        wxOperatingSystemId id = wxOS_UNKNOWN,
        int osMajor = -1,
        int osMinor = -1,
        wxArchitecture arch = wxARCH_INVALID,
        wxEndianness endian = wxENDIAN_INVALID
    );

    wxArchitecture GetArchitecture();

    wxEndianness GetEndianness();

    static
    wxEndianness GetEndianness(
        const wxString & end
    );

    int GetOSMajorVersion();

    int GetOSMinorVersion();

    wxOperatingSystemId GetOperatingSystemId();

    static
    wxOperatingSystemId GetOperatingSystemId(
        const wxString & name
    );

    wxString GetOperatingSystemDescription();

    wxPortId GetPortId();

    static
    wxPortId GetPortId(
        const wxString & portname
    );

    wxString GetDesktopEnvironment();

    int GetToolkitMajorVersion();

    int GetToolkitMinorVersion();

    wxString GetArchName();

    static
    wxString GetArchName(
        wxArchitecture arch
    );

    wxString GetEndiannessName();

    static
    wxString GetEndiannessName(
        wxEndianness end
    );

    wxString GetOperatingSystemFamilyName();

    static
    wxString GetOperatingSystemFamilyName(
        wxOperatingSystemId os
    );

    wxString GetOperatingSystemIdName();

    static
    wxString GetOperatingSystemIdName(
        wxOperatingSystemId os
    );

    wxString GetPortIdName();

    static
    wxString GetPortIdName(
        wxPortId port,
        bool usingUniversal
    );

    wxString GetPortIdShortName();

    static
    wxString GetPortIdShortName(
        wxPortId port,
        bool usingUniversal
    );

    void SetArchitecture(
        wxArchitecture n
    );

    void SetEndianness(
        wxEndianness n
    );

    void SetOSVersion(
        int major,
        int minor
    );

    void SetOperatingSystemId(
        wxOperatingSystemId n
    );

    void SetPortId(
        wxPortId n
    );

    void SetToolkitVersion(
        int major,
        int minor
    );

    void SetOperatingSystemDescription(
        const wxString & desc
    );

    void SetDesktopEnvironment(
        const wxString & de
    );

    static
    wxArchitecture GetArch(
        const wxString & arch
    );

    static
    wxString GetOperatingSystemDirectory();

    bool CheckOSVersion(
        int major,
        int minor
    );

    bool CheckToolkitVersion(
        int major,
        int minor
    );

    bool IsOk();

    bool IsUsingUniversalWidgets();

    bool operator!=(
        const wxPlatformInfo & t
    );

    bool operator==(
        const wxPlatformInfo & t
    );

    static
    const wxPlatformInfo & Get();

};  // end of class wxPlatformInfo


enum wxOperatingSystemId
{
    wxOS_UNKNOWN,
    wxOS_MAC_OS,
    wxOS_MAC_OSX_DARWIN,
    wxOS_MAC,
    wxOS_WINDOWS_9X,
    wxOS_WINDOWS_NT,
    wxOS_WINDOWS_MICRO,
    wxOS_WINDOWS_CE,
    wxOS_WINDOWS,
    wxOS_UNIX_LINUX,
    wxOS_UNIX_FREEBSD,
    wxOS_UNIX_OPENBSD,
    wxOS_UNIX_NETBSD,
    wxOS_UNIX_SOLARIS,
    wxOS_UNIX_AIX,
    wxOS_UNIX_HPUX,
    wxOS_UNIX,
    wxOS_DOS,
    wxOS_OS2
};

enum wxPortId
{
    wxPORT_UNKNOWN,
    wxPORT_BASE,
    wxPORT_MSW,
    wxPORT_MOTIF,
    wxPORT_GTK,
    wxPORT_MGL,
    wxPORT_X11,
    wxPORT_OS2,
    wxPORT_MAC,
    wxPORT_COCOA,
    wxPORT_WINCE,
    wxPORT_PALMOS,
    wxPORT_DFB
};

enum wxArchitecture
{
    wxARCH_INVALID,
    wxARCH_32,
    wxARCH_64,
    wxARCH_MAX
};

enum wxEndianness
{
    wxENDIAN_INVALID,
    wxENDIAN_BIG,
    wxENDIAN_LITTLE,
    wxENDIAN_PDP,
    wxENDIAN_MAX
};


//---------------------------------------------------------------------------

