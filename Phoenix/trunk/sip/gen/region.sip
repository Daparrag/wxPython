//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
// 
// Copyright: (c) 2010 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxRegionIterator : wxObject
{
    %TypeHeaderCode
        #include <wx/region.h>
    %End


public:
    wxRegionIterator();

    wxRegionIterator(
        const wxRegion & region
    );

    wxCoord GetH();

    wxCoord GetHeight();

    wxRect GetRect();

    wxCoord GetW();

    wxCoord GetWidth();

    wxCoord GetX();

    wxCoord GetY();

    bool HaveRects();

    void Reset();

    void Reset(
        const wxRegion & region
    );

     operator bool();

    %TypeCode
    void _wxRegionIterator_Next(wxRegionIterator* self, int& _isErr)
    {
        self->operator++();
    }
    %End
    void Next();
    %MethodCode
        _wxRegionIterator_Next(sipCpp, sipIsErr);
    %End

    %TypeCode
    int _wxRegionIterator___nonzero__(wxRegionIterator* self, int& _isErr)
    {
        return (int)self->operator bool();
    }
    %End
    int __nonzero__();
    %MethodCode
        sipRes = _wxRegionIterator___nonzero__(sipCpp, sipIsErr);
    %End

    %Property(name=H, get=GetH)
    %Property(name=Height, get=GetHeight)
    %Property(name=Rect, get=GetRect)
    %Property(name=W, get=GetW)
    %Property(name=Width, get=GetWidth)
    %Property(name=X, get=GetX)
    %Property(name=Y, get=GetY)
};  // end of class wxRegionIterator


class wxRegion : wxGDIObject
{
    %TypeHeaderCode
        #include <wx/region.h>
    %End


public:
    wxRegion();

    wxRegion(
        wxCoord x,
        wxCoord y,
        wxCoord width,
        wxCoord height
    );

    wxRegion(
        const wxPoint & topLeft,
        const wxPoint & bottomRight
    );

    wxRegion(
        const wxRect & rect
    );

    wxRegion(
        const wxRegion & region
    );

    wxRegion(
        size_t n,
        const wxPoint * points,
        wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    );

    wxRegion(
        const wxBitmap & bmp
    );

    wxRegion(
        const wxBitmap & bmp,
        const wxColour & transColour,
        int tolerance = 0
    );

    ~wxRegion();

    wxRect GetBox();

    bool Offset(
        wxCoord x,
        wxCoord y
    );

    bool Offset(
        const wxPoint & pt
    );

    void Clear();

    wxRegionContain Contains(
        wxCoord x,
        wxCoord y
    );

    wxRegionContain Contains(
        const wxPoint & pt
    );

    wxRegionContain Contains(
        wxCoord x,
        wxCoord y,
        wxCoord width,
        wxCoord height
    );

    wxRegionContain Contains(
        const wxRect & rect
    );

    wxBitmap ConvertToBitmap();

    bool Intersect(
        wxCoord x,
        wxCoord y,
        wxCoord width,
        wxCoord height
    );

    bool Intersect(
        const wxRect & rect
    );

    bool Intersect(
        const wxRegion & region
    );

    bool IsEmpty();

    bool IsEqual(
        const wxRegion & region
    );

    bool Subtract(
        const wxRect & rect
    );

    bool Subtract(
        const wxRegion & region
    );

    bool Union(
        wxCoord x,
        wxCoord y,
        wxCoord width,
        wxCoord height
    );

    bool Union(
        const wxRect & rect
    );

    bool Union(
        const wxRegion & region
    );

    bool Union(
        const wxBitmap & bmp
    );

    bool Union(
        const wxBitmap & bmp,
        const wxColour & transColour,
        int tolerance = 0
    );

    bool Xor(
        wxCoord x,
        wxCoord y,
        wxCoord width,
        wxCoord height
    );

    bool Xor(
        const wxRect & rect
    );

    bool Xor(
        const wxRegion & region
    );

    %Property(name=Box, get=GetBox)
};  // end of class wxRegion


enum wxRegionContain
{
    wxOutRegion,
    wxPartRegion,
    wxInRegion
};


//---------------------------------------------------------------------------

